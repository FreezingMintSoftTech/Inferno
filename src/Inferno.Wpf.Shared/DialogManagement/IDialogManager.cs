using System.Threading.Tasks;

namespace Inferno
{
    public interface IDialogManager
    {
        Task<bool?> ShowDialog<TChoice>(IDialogViewModel<TChoice> viewModel, IDialogSettings settings);

        /// <summary>
        /// Provides fine grained control by specifying the buttons as <see cref="ButtonContext&lt;ButtonChoice&gt;"/>.
        /// </summary>
        /// <param name="title"></param>
        /// <param name="message"></param>
        /// <param name="dialogType"></param>
        /// <param name="buttons"></param>
        /// <returns></returns>
        Task<bool?> ShowMessageBox(string title, string message, DialogType dialogType, params ButtonContext<ButtonChoice>[] buttons);

        /// <summary>
        /// Buttons are generated by conventions, based on the order of the passed in <see cref="ButtonChoice"/>s.
        /// The left most button is used to confirm and the right most button to cancel.
        /// </summary>
        /// <param name="title"></param>
        /// <param name="message"></param>
        /// <param name="dialogType"></param>
        /// <param name="choices"></param>
        /// <returns></returns>
        Task<bool?> ShowMessageBox(string title, string message, DialogType dialogType, params ButtonChoice[] choices);
    }
}
